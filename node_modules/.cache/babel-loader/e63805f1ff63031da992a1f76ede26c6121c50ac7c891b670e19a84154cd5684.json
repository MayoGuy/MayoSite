{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMCS\\\\Desktop\\\\React-test\\\\myapp\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport flag from './flag.svg';\nimport { useEffect } from 'react';\nimport bomb from './bomb.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Square(props) {\n  const {\n    square,\n    onClick,\n    onContextMenu,\n    animationHandler\n  } = props;\n  const style = {\n    backgroundColor: square.open ? 'lightgrey' : 'darkgrey',\n    color: square.value === 'X' ? 'red' : 'black'\n  };\n  let value = square.value === 0 ? '' : square.value;\n  let flagImg = square.flag ? /*#__PURE__*/_jsxDEV(\"img\", {\n    src: flag,\n    alt: \"flag\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 33\n  }, this) : null;\n  let blockClass = square.open ? 'block top-part disappeared' : 'block top-part';\n  if (square.open && !square.animationed) {\n    blockClass += ' disappear';\n  }\n  const handler = e => {\n    e.preventDefault();\n    onContextMenu();\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    style: style,\n    onClick: onClick,\n    onContextMenu: handler,\n    children: [flagImg, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: blockClass,\n      onAnimationEnd: animationHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block\",\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_c = Square;\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleAnimationEnd = (e, x, y) => {\n      this.setState(prevState => {\n        const squares = prevState.squares.map(row => row.slice());\n        squares[y][x] = {\n          ...squares[y][x],\n          animationed: true\n        };\n        return {\n          squares\n        };\n      });\n      e.target.classList.remove('disappear');\n      e.target.classList.remove('top-part');\n    };\n    this.state = {\n      squares: Array.from({\n        length: 10\n      }, () => Array(10).fill({\n        value: 0,\n        flag: false,\n        open: false,\n        animationed: false\n      })),\n      firstClick: false,\n      gameEnd: false\n    };\n  }\n  toXY(num) {\n    return [num % 10, Math.floor(num / 10)];\n  }\n  getNeighbours(x, y) {\n    var cells = [[x - 1, y - 1], [x - 1, y], [x - 1, y + 1], [x, y - 1], [x, y + 1], [x + 1, y - 1], [x + 1, y], [x + 1, y + 1]];\n    return cells.filter(cell => cell[0] >= 0 && cell[0] < 10 && cell[1] >= 0 && cell[1] < 10);\n  }\n  createMines(first) {\n    var mines = [];\n    while (mines.length < 15) {\n      var r = Math.floor(Math.random() * 100);\n      if (mines.indexOf(r) === -1 && r !== first) mines.push(r);\n    }\n    this.setState(prevState => {\n      const squares = prevState.squares.map(row => row.slice());\n      for (let i = 0; i < mines.length; i++) {\n        let [x, y] = this.toXY(mines[i]);\n        squares[y][x] = {\n          ...squares[y][x],\n          value: 'X'\n        };\n      }\n      return {\n        squares\n      };\n    }, this.createNums);\n  }\n  createNums() {\n    this.setState(prevState => {\n      const squares = prevState.squares.map(row => row.slice());\n      for (let x = 0; x < 10; x++) {\n        for (let y = 0; y < 10; y++) {\n          if (squares[y][x].value === 'X') {\n            let cells = this.getNeighbours(x, y);\n            for (let j = 0; j < cells.length; j++) {\n              let [xt, yt] = cells[j];\n              if (squares[yt][xt].value !== 'X') {\n                squares[yt][xt] = {\n                  ...squares[yt][xt],\n                  value: squares[yt][xt].value + 1\n                };\n              }\n            }\n          }\n        }\n      }\n      return {\n        squares\n      };\n    });\n  }\n  handleClick(x, y) {\n    if (!this.state.firstClick) {\n      this.createMines(y * 10 + x);\n      this.setState({\n        firstClick: true\n      }, () => this.handleClick(x, y));\n      return;\n    }\n    if (!this.state.squares[y][x].open && !this.state.squares[y][x].flag) {\n      this.setState(prevState => {\n        if (prevState.squares[y][x].value === 'X') {\n          this.setState({\n            gameEnd: true\n          });\n          this.bombClick();\n          return;\n        }\n        const squares = prevState.squares.map(row => row.slice());\n        squares[y][x] = {\n          ...squares[y][x],\n          open: true\n        };\n        return {\n          squares\n        };\n      }, () => {\n        if (this.state.squares[y][x].value === 0) {\n          this.openSquares(x, y);\n        }\n      });\n    } else if (this.state.squares[y][x].open) {\n      console.log(this.openFlagNeighbours(x, y));\n      this.openFlagNeighbours(x, y);\n    }\n  }\n  handleRightClick(x, y) {\n    this.setState(prevState => {\n      const squares = prevState.squares.map(row => row.slice());\n      const flagged = !squares[y][x].flag;\n      squares[y][x] = {\n        ...squares[y][x],\n        flag: squares[y][x].open ? !flagged : flagged\n      };\n      return {\n        squares\n      };\n    });\n    return false;\n  }\n  openFlagNeighbours(x, y) {\n    const val = this.state.squares[y][x].value;\n    var cells = this.getNeighbours(x, y);\n    let flagnums = 0;\n    cells.forEach(cell => {\n      if (this.state.squares[cell[1]][cell[0]].flag) {\n        flagnums++;\n      }\n    });\n    console.log(flagnums, val);\n    if (flagnums === val) {\n      cells.forEach(cell => {\n        if (!this.state.squares[cell[1]][cell[0]].open && !this.state.squares[cell[1]][cell[0]].flag) {\n          this.handleClick(cell[0], cell[1]);\n        }\n      });\n    }\n  }\n  openSquares(x, y) {\n    const cells = this.getNeighbours(x, y);\n    for (let j = 0; j < cells.length; j++) {\n      let [xt, yt] = cells[j];\n      if (!this.state.squares[yt][xt].open && !this.state.squares[yt][xt].flag && this.state.squares[yt][xt].value !== 'X') {\n        this.setState(prevState => {\n          const squares = prevState.squares.map(row => row.slice());\n          squares[yt][xt] = {\n            ...squares[yt][xt],\n            open: true\n          };\n          return {\n            squares\n          };\n        }, () => {\n          if (this.state.squares[yt][xt].value === 0) {\n            this.openSquares(xt, yt);\n          }\n        });\n      }\n    }\n  }\n  bombClick() {\n    let bombs = [];\n    const squares = this.state.squares.map(row => row.slice());\n    for (let i = 0; i < 10; i++) {\n      for (let j = 0; j < 10; j++) {\n        if (squares[i][j].value === 'X' && !squares[i][j].flag) {\n          bombs.push([i, j]);\n        }\n      }\n    }\n    this.openBombWithDelay(0, bombs, squares);\n  }\n  openBombWithDelay(index, bombs, squarecopy) {\n    if (index >= bombs.length) {\n      return;\n    }\n    setTimeout(() => {\n      const [x, y] = bombs[index];\n      squarecopy[x][y].open = true;\n      this.setState({\n        squares: squarecopy\n      });\n      document.querySelector('.board').classList.add('shake');\n      setTimeout(() => {\n        document.querySelector('.board').classList.remove('shake');\n      }, 500);\n      this.openBombWithDelay(index + 1, bombs, squarecopy);\n    }, 500);\n  }\n  renderSquare(x, y) {\n    const square = this.state.squares[y][x];\n    return /*#__PURE__*/_jsxDEV(Square, {\n      square: square,\n      animationHandler: e => this.handleAnimationEnd(e, x, y),\n      onClick: () => this.handleClick(x, y),\n      onContextMenu: () => this.handleRightClick(x, y)\n    }, `${x}-${y}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this);\n  }\n  render() {\n    const rows = [];\n    for (let i = 0; i < 10; i++) {\n      const cols = [];\n      for (let j = 0; j < 10; j++) {\n        cols.push(this.renderSquare(j, i));\n      }\n      rows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: cols\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this));\n    }\n    let status = \"Ongoing\";\n    if (checkWin(this.state.squares)) {\n      status = \"You won!\";\n    }\n    if (this.state.gameEnd) {\n      status = \"You lost!\";\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"board\",\n        children: [rows, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }, this), status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 16\n    }, this);\n  }\n}\nclass Game extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this);\n  }\n}\nfunction checkWin(squares) {\n  for (let i = 0; i < 10; i++) {\n    for (let j = 0; j < 10; j++) {\n      if (!squares[i][j].open && squares[i][j].value !== 'X') {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n// ========================================\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 278,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"names":["React","ReactDOM","flag","useEffect","bomb","jsxDEV","_jsxDEV","Square","props","square","onClick","onContextMenu","animationHandler","style","backgroundColor","open","color","value","flagImg","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","blockClass","animationed","handler","e","preventDefault","className","children","onAnimationEnd","_c","Board","Component","constructor","handleAnimationEnd","x","y","setState","prevState","squares","map","row","slice","target","classList","remove","state","Array","from","length","fill","firstClick","gameEnd","toXY","num","Math","floor","getNeighbours","cells","filter","cell","createMines","first","mines","r","random","indexOf","push","i","createNums","j","xt","yt","handleClick","bombClick","openSquares","console","log","openFlagNeighbours","handleRightClick","flagged","val","flagnums","forEach","bombs","openBombWithDelay","index","squarecopy","setTimeout","document","querySelector","add","renderSquare","render","rows","cols","status","checkWin","class","Game","root","createRoot","getElementById","$RefreshReg$"],"sources":["C:/Users/AMCS/Desktop/React-test/myapp/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport flag from './flag.svg'\r\nimport { useEffect } from 'react';\r\nimport bomb from './bomb.svg'\r\n\r\nfunction Square(props) {\r\n    const { square, onClick, onContextMenu, animationHandler } = props;\r\n\r\n    const style = {\r\n        backgroundColor: square.open ? 'lightgrey' : 'darkgrey',\r\n        color: square.value === 'X' ? 'red' : 'black'\r\n    };\r\n\r\n    let value = square.value === 0 ? '' : square.value;\r\n    let flagImg = square.flag ? <img src={flag} alt=\"flag\" /> : null;\r\n    let blockClass = square.open ? 'block top-part disappeared' : 'block top-part';\r\n\r\n    if (square.open && !square.animationed) {\r\n        blockClass += ' disappear';\r\n    }\r\n    const handler = (e) => {\r\n        e.preventDefault();\r\n        onContextMenu()\r\n    }\r\n\r\n    return (\r\n        <button className=\"square\" style={style} onClick={onClick} onContextMenu={handler}>\r\n            {flagImg}\r\n            <div className={blockClass} onAnimationEnd={animationHandler}></div>\r\n            <div className=\"block\">{value}</div>\r\n        </button>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            squares: Array.from({ length: 10 }, () => Array(10).fill({ value: 0, flag: false, open: false, animationed: false })),\r\n            firstClick: false,\r\n            gameEnd: false\r\n        };\r\n    }\r\n\r\n    toXY(num) {\r\n        return [num % 10, Math.floor(num / 10)];\r\n    }\r\n\r\n    getNeighbours(x, y) {\r\n        var cells = [[x - 1, y - 1], [x - 1, y], [x - 1, y + 1], [x, y - 1], [x, y + 1], [x + 1, y - 1], [x + 1, y], [x + 1, y + 1]];\r\n        return cells.filter(cell => cell[0] >= 0 && cell[0] < 10 && cell[1] >= 0 && cell[1] < 10);\r\n    }\r\n\r\n    createMines(first) {\r\n        var mines = [];\r\n        while (mines.length < 15) {\r\n            var r = Math.floor(Math.random() * 100);\r\n            if (mines.indexOf(r) === -1 && r !== first) mines.push(r);\r\n        }\r\n        this.setState(prevState => {\r\n            const squares = prevState.squares.map(row => row.slice());\r\n            for (let i = 0; i < mines.length; i++) {\r\n                let [x, y] = this.toXY(mines[i]);\r\n                squares[y][x] = { ...squares[y][x], value: 'X' };\r\n            }\r\n            return { squares };\r\n        }, this.createNums);\r\n    }\r\n\r\n    createNums() {\r\n        this.setState(prevState => {\r\n            const squares = prevState.squares.map(row => row.slice());\r\n            for (let x = 0; x < 10; x++) {\r\n                for (let y = 0; y < 10; y++) {\r\n                    if (squares[y][x].value === 'X') {\r\n                        let cells = this.getNeighbours(x, y);\r\n                        for (let j = 0; j < cells.length; j++) {\r\n                            let [xt, yt] = cells[j];\r\n                            if (squares[yt][xt].value !== 'X') {\r\n                                squares[yt][xt] = { ...squares[yt][xt], value: squares[yt][xt].value + 1 };\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return { squares };\r\n        });\r\n    }\r\n\r\n    handleClick(x, y) {\r\n        if (!this.state.firstClick) {\r\n            this.createMines(y * 10 + x);\r\n            this.setState({ firstClick: true }, () => this.handleClick(x, y));\r\n            return;\r\n        }\r\n        if (!this.state.squares[y][x].open && !this.state.squares[y][x].flag) {\r\n            this.setState(prevState => {\r\n                if (prevState.squares[y][x].value === 'X') {\r\n                    this.setState({ gameEnd: true });\r\n                    this.bombClick();\r\n                    return;\r\n                }\r\n                const squares = prevState.squares.map(row => row.slice());\r\n                squares[y][x] = { ...squares[y][x], open: true };\r\n                return { squares };\r\n            }, () => {\r\n                if (this.state.squares[y][x].value === 0) {\r\n                    this.openSquares(x, y);\r\n                }\r\n            });\r\n        } else if (this.state.squares[y][x].open ) {\r\n            console.log(this.openFlagNeighbours(x, y))\r\n            this.openFlagNeighbours(x, y);\r\n        }\r\n    }\r\n\r\n    handleRightClick(x, y) {\r\n        this.setState(prevState => {\r\n            const squares = prevState.squares.map(row => row.slice());\r\n            const flagged = !squares[y][x].flag\r\n            squares[y][x] = { ...squares[y][x], flag: squares[y][x].open ? !flagged : flagged };\r\n            return { squares };\r\n        });\r\n        return false;\r\n    }\r\n\r\n    handleAnimationEnd = (e, x, y) => {\r\n            this.setState(prevState => {\r\n                const squares = prevState.squares.map(row => row.slice());\r\n                squares[y][x] = { ...squares[y][x], animationed: true };\r\n                return { squares };\r\n            })\r\n            e.target.classList.remove('disappear');\r\n            e.target.classList.remove('top-part');\r\n    };\r\n\r\n    openFlagNeighbours(x, y) {\r\n        const val = this.state.squares[y][x].value;\r\n        var cells = this.getNeighbours(x, y);\r\n        let flagnums = 0;\r\n        \r\n        cells.forEach(cell => {\r\n            if (this.state.squares[cell[1]][cell[0]].flag) {\r\n                flagnums++;\r\n            }\r\n        })\r\n        console.log(flagnums, val);\r\n        if (flagnums === val) {\r\n            cells.forEach(cell => {\r\n                if (!this.state.squares[cell[1]][cell[0]].open && !this.state.squares[cell[1]][cell[0]].flag) {\r\n                    this.handleClick(cell[0], cell[1]);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    openSquares(x, y) {\r\n        const cells = this.getNeighbours(x, y);\r\n        for (let j = 0; j < cells.length; j++) {\r\n            let [xt, yt] = cells[j];\r\n            if (!this.state.squares[yt][xt].open && !this.state.squares[yt][xt].flag && this.state.squares[yt][xt].value !== 'X') {\r\n                this.setState(prevState => {\r\n                    const squares = prevState.squares.map(row => row.slice());\r\n                    squares[yt][xt] = { ...squares[yt][xt], open: true };\r\n                    return { squares };\r\n                }, () => {\r\n                    if (this.state.squares[yt][xt].value === 0) {\r\n                        this.openSquares(xt, yt);\r\n\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    bombClick() {\r\n        let bombs = [];\r\n        const squares = this.state.squares.map(row => row.slice());\r\n        for (let i = 0; i < 10; i++) {\r\n            for (let j = 0; j < 10; j++) {\r\n                if (squares[i][j].value === 'X' && !squares[i][j].flag) {\r\n                    bombs.push([i, j]);\r\n                }\r\n            }\r\n        }\r\n        this.openBombWithDelay(0, bombs, squares);\r\n    }\r\n\r\n    openBombWithDelay(index, bombs, squarecopy) {\r\n        if (index >= bombs.length) {\r\n            return;\r\n        }\r\n\r\n        setTimeout(() => {\r\n            const [ x, y ] = bombs[index];\r\n            squarecopy[x][y].open = true;\r\n            this.setState({ squares: squarecopy });\r\n\r\n            document.querySelector('.board').classList.add('shake');\r\n\r\n            setTimeout(() => {\r\n                document.querySelector('.board').classList.remove('shake');\r\n            }, 500);\r\n\r\n            this.openBombWithDelay(index + 1, bombs, squarecopy);\r\n        }, 500);\r\n    };\r\n\r\n    renderSquare(x, y) {\r\n        const square = this.state.squares[y][x];\r\n        return (\r\n            <Square\r\n                key={`${x}-${y}`}\r\n                square={square}\r\n                animationHandler={(e) => this.handleAnimationEnd(e, x, y)}\r\n                onClick={() => this.handleClick(x, y)}\r\n                onContextMenu={() => this.handleRightClick(x, y)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const rows = [];\r\n        for (let i = 0; i < 10; i++) {\r\n            const cols = [];\r\n            for (let j = 0; j < 10; j++) {\r\n                cols.push(this.renderSquare(j, i));\r\n            }\r\n            rows.push(\r\n                <div key={i} className=\"board-row\">\r\n                    {cols}\r\n                </div>\r\n            );\r\n        }\r\n        let status = \"Ongoing\"\r\n        if (checkWin(this.state.squares)) {\r\n            status = \"You won!\";\r\n        }\r\n        if (this.state.gameEnd) {\r\n            status = \"You lost!\";\r\n        }\r\n        return <div><div class = \"board\">{rows} </div>{status}</div>;\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{/* status */}</div>\r\n                    <ol>{/* TODO */}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction checkWin(squares) {\r\n    for (let i = 0; i < 10; i++) {\r\n        for (let j = 0; j < 10; j++) {\r\n            if (!squares[i][j].open && squares[i][j].value !== 'X') {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\n// ========================================\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(<Game />);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}