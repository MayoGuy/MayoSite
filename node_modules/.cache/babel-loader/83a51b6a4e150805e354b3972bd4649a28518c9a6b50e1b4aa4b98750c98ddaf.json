{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMCS\\\\Desktop\\\\React-test\\\\myapp\\\\src\\\\index.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport flag from './flag.svg';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport bomb from './bomb.svg';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Configurations() {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  function openModal() {\n    setIsOpen(true);\n  }\n  function afterOpenModal() {\n    subtitle.style.color = '#f00';\n  }\n  function closeModal() {\n    setIsOpen(false);\n  }\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    style: customStyles,\n    className: \"modal\",\n    onAfterOpen: afterOpenModal,\n    onRequestClose: closeModal\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(Configurations, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = Configurations;\nfunction Timer() {\n  _s2();\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (seconds === 59) {\n        setMinutes(minutes => minutes + 1);\n        setSeconds(0);\n      } else {\n        setSeconds(seconds => seconds + 1);\n      }\n    }, 1000); // Update every 1 second\n\n    return () => clearInterval(intervalId); // Cleanup function\n  }, []); // Empty dependency array: run effect only once on mount\n\n  const formatTime = value => {\n    return value.toString().padStart(2, '0'); // Pad with leading zeros\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), formatTime(minutes), \":\", formatTime(seconds)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }, this);\n}\n_s2(Timer, \"lDz18iep09y+bhBUDK33hPjXs38=\");\n_c2 = Timer;\nfunction Square(props) {\n  const sq = props.square;\n  let val = sq.value;\n  if (sq.value === 0) {\n    val = '';\n  }\n  let img = sq.flag ? /*#__PURE__*/_jsxDEV(\"img\", {\n    src: flag\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 25\n  }, this) : null;\n  if (sq.open && sq.value === 'X') {\n    img = /*#__PURE__*/_jsxDEV(\"img\", {\n      src: bomb\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }, this);\n    val = '';\n  }\n  let block = sq.open ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"block top-part disappeared\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 27\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"block top-part\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 81\n  }, this);\n  if (sq.open && !sq.animationed) {\n    block = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block top-part disappear\",\n      onAnimationEnd: props.animationHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this);\n  }\n  const handler = e => {\n    e.preventDefault();\n    props.onContextMenu();\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    onContextMenu: handler,\n    children: [img, block, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block\",\n      children: val\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n_c3 = Square;\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleAnimationEnd = (e, x, y) => {\n      this.setState(prevState => {\n        const squares = prevState.squares.map(row => row.slice());\n        squares[y][x] = {\n          ...squares[y][x],\n          animationed: true\n        };\n        return {\n          squares\n        };\n      });\n      e.target.classList.remove('disappear');\n      e.target.classList.remove('top-part');\n    };\n    this.state = {\n      squares: Array.from({\n        length: 10\n      }, () => Array(10).fill({\n        value: 0,\n        flag: false,\n        open: false,\n        animationed: false\n      })),\n      flags: 15,\n      mines: 15,\n      firstClick: false,\n      gameEnd: false\n    };\n  }\n  toXY(num) {\n    return [num % 10, Math.floor(num / 10)];\n  }\n  getNeighbours(x, y) {\n    var cells = [[x - 1, y - 1], [x - 1, y], [x - 1, y + 1], [x, y - 1], [x, y + 1], [x + 1, y - 1], [x + 1, y], [x + 1, y + 1]];\n    return cells.filter(cell => cell[0] >= 0 && cell[0] < 10 && cell[1] >= 0 && cell[1] < 10);\n  }\n  createMines(first) {\n    var mines = [];\n    while (mines.length < 15) {\n      var r = Math.floor(Math.random() * 100);\n      if (mines.indexOf(r) === -1 && r !== first) mines.push(r);\n    }\n    this.setState(prevState => {\n      const squares = prevState.squares.map(row => row.slice());\n      for (let i = 0; i < mines.length; i++) {\n        let [x, y] = this.toXY(mines[i]);\n        squares[y][x] = {\n          ...squares[y][x],\n          value: 'X'\n        };\n      }\n      return {\n        squares\n      };\n    }, this.createNums);\n  }\n  createNums() {\n    this.setState(prevState => {\n      const squares = prevState.squares.map(row => row.slice());\n      for (let x = 0; x < 10; x++) {\n        for (let y = 0; y < 10; y++) {\n          if (squares[y][x].value === 'X') {\n            let cells = this.getNeighbours(x, y);\n            for (let j = 0; j < cells.length; j++) {\n              let [xt, yt] = cells[j];\n              if (squares[yt][xt].value !== 'X') {\n                squares[yt][xt] = {\n                  ...squares[yt][xt],\n                  value: squares[yt][xt].value + 1\n                };\n              }\n            }\n          }\n        }\n      }\n      return {\n        squares\n      };\n    });\n  }\n  handleClick(x, y) {\n    if (!this.state.firstClick) {\n      this.createMines(y * 10 + x);\n      this.setState({\n        firstClick: true\n      }, () => this.handleClick(x, y));\n      return;\n    }\n    if (!this.state.squares[y][x].open && !this.state.squares[y][x].flag) {\n      this.setState(prevState => {\n        if (prevState.squares[y][x].value === 'X') {\n          this.setState({\n            gameEnd: true\n          });\n          this.bombClick(x, y);\n          return;\n        }\n        const squares = prevState.squares.map(row => row.slice());\n        squares[y][x] = {\n          ...squares[y][x],\n          open: true\n        };\n        return {\n          squares\n        };\n      }, () => {\n        if (this.state.squares[y][x].value === 0) {\n          this.openSquares(x, y);\n        }\n      });\n    } else if (this.state.squares[y][x].open) {\n      this.openFlagNeighbours(x, y);\n    }\n  }\n  handleRightClick(x, y) {\n    this.setState(prevState => {\n      const squares = prevState.squares.map(row => row.slice());\n      const flagged = !squares[y][x].flag;\n      squares[y][x] = {\n        ...squares[y][x],\n        flag: squares[y][x].open ? !flagged : flagged\n      };\n      return {\n        squares\n      };\n    });\n    return false;\n  }\n  openFlagNeighbours(x, y) {\n    const val = this.state.squares[y][x].value;\n    var cells = this.getNeighbours(x, y);\n    let flagnums = 0;\n    cells.forEach(cell => {\n      if (this.state.squares[cell[1]][cell[0]].flag) {\n        flagnums++;\n      }\n    });\n    if (flagnums === val) {\n      cells.forEach(cell => {\n        if (!this.state.squares[cell[1]][cell[0]].open && !this.state.squares[cell[1]][cell[0]].flag) {\n          this.handleClick(cell[0], cell[1]);\n        }\n      });\n    }\n  }\n  openSquares(x, y) {\n    const cells = this.getNeighbours(x, y);\n    for (let j = 0; j < cells.length; j++) {\n      let [xt, yt] = cells[j];\n      if (!this.state.squares[yt][xt].open && !this.state.squares[yt][xt].flag && this.state.squares[yt][xt].value !== 'X') {\n        this.setState(prevState => {\n          const squares = prevState.squares.map(row => row.slice());\n          squares[yt][xt] = {\n            ...squares[yt][xt],\n            open: true\n          };\n          return {\n            squares\n          };\n        }, () => {\n          if (this.state.squares[yt][xt].value === 0) {\n            this.openSquares(xt, yt);\n          }\n        });\n      }\n    }\n  }\n  bombClick(x, y) {\n    let bombs = [];\n    const squares = this.state.squares.map(row => row.slice());\n    for (let i = 0; i < 10; i++) {\n      for (let j = 0; j < 10; j++) {\n        if (squares[i][j].value === 'X' && !squares[i][j].flag) {\n          if (i === y && j === x) {\n            continue;\n          }\n          bombs.push([i, j]);\n        }\n      }\n    }\n    squares[y][x].open = true;\n    squares[y][x].animationed = true;\n    this.setState({\n      squares: squares\n    });\n    this.openBombWithDelay(bombs, squares);\n  }\n  openBombWithDelay(bombs, squarecopy) {\n    if (bombs.length === 0) {\n      return;\n    }\n    setTimeout(() => {\n      const [x, y] = bombs[0];\n      bombs.splice(0, 1);\n      squarecopy[x][y].open = true;\n      squarecopy[x][y].animationed = true;\n      this.setState({\n        squares: squarecopy\n      });\n      document.querySelector('.board').classList.add('shake');\n      setTimeout(() => {\n        document.querySelector('.board').classList.remove('shake');\n      }, 200);\n      this.openBombWithDelay(bombs, squarecopy);\n    }, 500);\n  }\n  renderSquare(x, y) {\n    const square = this.state.squares[y][x];\n    return /*#__PURE__*/_jsxDEV(Square, {\n      square: square,\n      animationHandler: e => this.handleAnimationEnd(e, x, y),\n      onClick: () => this.handleClick(x, y),\n      onContextMenu: () => this.handleRightClick(x, y)\n    }, `${x}-${y}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }, this);\n  }\n  render() {\n    const rows = [];\n    for (let i = 0; i < 10; i++) {\n      const cols = [];\n      for (let j = 0; j < 10; j++) {\n        cols.push(this.renderSquare(j, i));\n      }\n      rows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: cols\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }, this));\n    }\n    let status = \"Ongoing\";\n    if (checkWin(this.state.squares)) {\n      status = \"You won!\";\n    }\n    if (this.state.gameEnd) {\n      status = \"You lost!\";\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-data\",\n        children: [/*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-fs\",\n          children: [\"Mines: \", this.state.mines, \" | Flags: \", this.state.flags]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"board\",\n        children: [rows, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this), status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 16\n    }, this);\n  }\n}\nclass Game extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"MINESWEEPER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }, this);\n  }\n}\nfunction checkWin(squares) {\n  for (let i = 0; i < 10; i++) {\n    for (let j = 0; j < 10; j++) {\n      if (!squares[i][j].open && squares[i][j].value !== 'X') {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n// ========================================\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 349,\n  columnNumber: 13\n}, this));\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Configurations\");\n$RefreshReg$(_c2, \"Timer\");\n$RefreshReg$(_c3, \"Square\");","map":{"version":3,"names":["React","ReactDOM","flag","useEffect","useState","bomb","Modal","jsxDEV","_jsxDEV","Configurations","_s","isOpen","setIsOpen","openModal","afterOpenModal","subtitle","style","color","closeModal","customStyles","className","onAfterOpen","onRequestClose","fileName","_jsxFileName","lineNumber","columnNumber","_c","Timer","_s2","minutes","setMinutes","seconds","setSeconds","intervalId","setInterval","clearInterval","formatTime","value","toString","padStart","children","_c2","Square","props","sq","square","val","img","src","open","block","animationed","onAnimationEnd","animationHandler","handler","e","preventDefault","onContextMenu","onClick","_c3","Board","Component","constructor","handleAnimationEnd","x","y","setState","prevState","squares","map","row","slice","target","classList","remove","state","Array","from","length","fill","flags","mines","firstClick","gameEnd","toXY","num","Math","floor","getNeighbours","cells","filter","cell","createMines","first","r","random","indexOf","push","i","createNums","j","xt","yt","handleClick","bombClick","openSquares","openFlagNeighbours","handleRightClick","flagged","flagnums","forEach","bombs","openBombWithDelay","squarecopy","setTimeout","splice","document","querySelector","add","renderSquare","render","rows","cols","status","checkWin","class","Game","root","createRoot","getElementById","$RefreshReg$"],"sources":["C:/Users/AMCS/Desktop/React-test/myapp/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport flag from './flag.svg'\r\nimport { useEffect } from 'react'; \r\nimport { useState } from 'react';\r\nimport bomb from './bomb.svg'\r\nimport Modal from 'react-modal';\r\n\r\n\r\nfunction Configurations () {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    function openModal() {\r\n        setIsOpen(true);\r\n      }\r\n    \r\n    function afterOpenModal() {\r\n    subtitle.style.color = '#f00';\r\n    }\r\n\r\n    function closeModal() {\r\n    setIsOpen(false);\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={isOpen} style={customStyles} className=\"modal\" onAfterOpen={afterOpenModal} onRequestClose={closeModal}>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\nfunction Timer() {\r\n    const [minutes, setMinutes] = useState(0);\r\n    const [seconds, setSeconds] = useState(0);\r\n  \r\n    useEffect(() => {\r\n      const intervalId = setInterval(() => {\r\n        if (seconds === 59) {\r\n          setMinutes(minutes => minutes + 1);\r\n          setSeconds(0);\r\n        } else {\r\n          setSeconds(seconds => seconds + 1);\r\n        }\r\n      }, 1000); // Update every 1 second\r\n  \r\n      return () => clearInterval(intervalId); // Cleanup function\r\n    }, []); // Empty dependency array: run effect only once on mount\r\n  \r\n    const formatTime = (value) => {\r\n      return value.toString().padStart(2, '0'); // Pad with leading zeros\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <Modal></Modal>\r\n          {formatTime(minutes)}:{formatTime(seconds)}\r\n      </div>\r\n    );\r\n  }\r\n\r\nfunction Square(props) {\r\n    const sq = props.square\r\n    let val = sq.value\r\n    if (sq.value === 0) {\r\n        val = ''\r\n    }\r\n    let img = sq.flag ? <img src={flag}></img> : null;\r\n    if (sq.open && sq.value === 'X') {\r\n        img = <img src={bomb}></img>;\r\n        val = ''\r\n    }\r\n    let block = sq.open ? <div className='block top-part disappeared' ></div> : <div className='block top-part' ></div>;\r\n    if (sq.open && !sq.animationed) {\r\n        block = <div className='block top-part disappear' onAnimationEnd={props.animationHandler} ></div>;\r\n    }\r\n    const handler = (e) => {\r\n        e.preventDefault();\r\n        props.onContextMenu()\r\n    }\r\n\r\n\r\n    return (\r\n        <button className=\"square\" onClick={props.onClick} onContextMenu={handler} >\r\n            {img}\r\n            {block}\r\n            <div className='block'>{val}</div>\r\n        </button>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            squares: Array.from({ length: 10 }, () => Array(10).fill({ value: 0, flag: false, open: false, animationed: false })),\r\n            flags: 15,\r\n            mines: 15,\r\n            firstClick: false,\r\n            gameEnd: false\r\n        };\r\n    }\r\n\r\n    toXY(num) {\r\n        return [num % 10, Math.floor(num / 10)];\r\n    }\r\n\r\n    getNeighbours(x, y) {\r\n        var cells = [[x - 1, y - 1], [x - 1, y], [x - 1, y + 1], [x, y - 1], [x, y + 1], [x + 1, y - 1], [x + 1, y], [x + 1, y + 1]];\r\n        return cells.filter(cell => cell[0] >= 0 && cell[0] < 10 && cell[1] >= 0 && cell[1] < 10);\r\n    }\r\n\r\n    createMines(first) {\r\n        var mines = [];\r\n        while (mines.length < 15) {\r\n            var r = Math.floor(Math.random() * 100);\r\n            if (mines.indexOf(r) === -1 && r !== first) mines.push(r);\r\n        }\r\n        this.setState(prevState => {\r\n            const squares = prevState.squares.map(row => row.slice());\r\n            for (let i = 0; i < mines.length; i++) {\r\n                let [x, y] = this.toXY(mines[i]);\r\n                squares[y][x] = { ...squares[y][x], value: 'X' };\r\n            }\r\n            return { squares };\r\n        }, this.createNums);\r\n    }\r\n\r\n    createNums() {\r\n        this.setState(prevState => {\r\n            const squares = prevState.squares.map(row => row.slice());\r\n            for (let x = 0; x < 10; x++) {\r\n                for (let y = 0; y < 10; y++) {\r\n                    if (squares[y][x].value === 'X') {\r\n                        let cells = this.getNeighbours(x, y);\r\n                        for (let j = 0; j < cells.length; j++) {\r\n                            let [xt, yt] = cells[j];\r\n                            if (squares[yt][xt].value !== 'X') {\r\n                                squares[yt][xt] = { ...squares[yt][xt], value: squares[yt][xt].value + 1 };\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return { squares };\r\n        });\r\n    }\r\n\r\n    handleClick(x, y) {\r\n        if (!this.state.firstClick) {\r\n            this.createMines(y * 10 + x);\r\n            this.setState({ firstClick: true }, () => this.handleClick(x, y));\r\n            return;\r\n        }\r\n        if (!this.state.squares[y][x].open && !this.state.squares[y][x].flag) {\r\n            this.setState(prevState => {\r\n                if (prevState.squares[y][x].value === 'X') {\r\n                    this.setState({ gameEnd: true });\r\n                    this.bombClick(x, y);\r\n                    return;\r\n                }\r\n                const squares = prevState.squares.map(row => row.slice());\r\n                squares[y][x] = { ...squares[y][x], open: true };\r\n                return { squares };\r\n            }, () => {\r\n                if (this.state.squares[y][x].value === 0) {\r\n                    this.openSquares(x, y);\r\n                }\r\n            });\r\n        } else if (this.state.squares[y][x].open ) {\r\n            this.openFlagNeighbours(x, y);\r\n        }\r\n    }\r\n\r\n    handleRightClick(x, y) {\r\n        this.setState(prevState => {\r\n            const squares = prevState.squares.map(row => row.slice());\r\n            const flagged = !squares[y][x].flag\r\n            squares[y][x] = { ...squares[y][x], flag: squares[y][x].open ? !flagged : flagged };\r\n            return { squares };\r\n        });\r\n        return false;\r\n    }\r\n\r\n    handleAnimationEnd = (e, x, y) => {\r\n            this.setState(prevState => {\r\n                const squares = prevState.squares.map(row => row.slice());\r\n                squares[y][x] = { ...squares[y][x], animationed: true };\r\n                return { squares };\r\n            })\r\n            e.target.classList.remove('disappear');\r\n            e.target.classList.remove('top-part');\r\n    };\r\n\r\n    openFlagNeighbours(x, y) {\r\n        const val = this.state.squares[y][x].value;\r\n        var cells = this.getNeighbours(x, y);\r\n        let flagnums = 0;\r\n        \r\n        cells.forEach(cell => {\r\n            if (this.state.squares[cell[1]][cell[0]].flag) {\r\n                flagnums++;\r\n            }\r\n        })\r\n        if (flagnums === val) {\r\n            cells.forEach(cell => {\r\n                if (!this.state.squares[cell[1]][cell[0]].open && !this.state.squares[cell[1]][cell[0]].flag) {\r\n                    this.handleClick(cell[0], cell[1]);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    openSquares(x, y) {\r\n        const cells = this.getNeighbours(x, y);\r\n        for (let j = 0; j < cells.length; j++) {\r\n            let [xt, yt] = cells[j];\r\n            if (!this.state.squares[yt][xt].open && !this.state.squares[yt][xt].flag && this.state.squares[yt][xt].value !== 'X') {\r\n                this.setState(prevState => {\r\n                    const squares = prevState.squares.map(row => row.slice());\r\n                    squares[yt][xt] = { ...squares[yt][xt], open: true };\r\n                    return { squares };\r\n                }, () => {\r\n                    if (this.state.squares[yt][xt].value === 0) {\r\n                        this.openSquares(xt, yt);\r\n\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    bombClick(x, y) {\r\n        let bombs = [];\r\n        const squares = this.state.squares.map(row => row.slice());\r\n        for (let i = 0; i < 10; i++) {\r\n            for (let j = 0; j < 10; j++) {\r\n                if (squares[i][j].value === 'X' && !squares[i][j].flag) {\r\n                    if (i === y && j === x) {\r\n                        continue\r\n                    }\r\n                    bombs.push([i, j]);\r\n                }\r\n            }\r\n        }\r\n        squares[y][x].open = true;\r\n        squares[y][x].animationed = true;\r\n        this.setState({ squares: squares });\r\n        this.openBombWithDelay(bombs, squares);\r\n    }\r\n\r\n\r\n    openBombWithDelay(bombs, squarecopy) {\r\n        if (bombs.length===0) {\r\n            return;\r\n        }\r\n\r\n        setTimeout(() => {\r\n            const [ x, y ] = bombs[0];\r\n            bombs.splice(0, 1)\r\n            squarecopy[x][y].open = true;\r\n            squarecopy[x][y].animationed = true;\r\n            this.setState({ squares: squarecopy });\r\n\r\n            document.querySelector('.board').classList.add('shake');\r\n\r\n            setTimeout(() => {\r\n                document.querySelector('.board').classList.remove('shake');\r\n            }, 200);\r\n\r\n            this.openBombWithDelay(bombs, squarecopy);\r\n        }, 500);\r\n    };\r\n\r\n    renderSquare(x, y) {\r\n        const square = this.state.squares[y][x];\r\n        return (\r\n            <Square\r\n                key={`${x}-${y}`}\r\n                square={square}\r\n                animationHandler={(e) => this.handleAnimationEnd(e, x, y)}\r\n                onClick={() => this.handleClick(x, y)}\r\n                onContextMenu={() => this.handleRightClick(x, y)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const rows = [];\r\n        for (let i = 0; i < 10; i++) {\r\n            const cols = [];\r\n            for (let j = 0; j < 10; j++) {\r\n                cols.push(this.renderSquare(j, i));\r\n            }\r\n            rows.push(\r\n                <div key={i} className=\"board-row\">\r\n                    {cols}\r\n                </div>\r\n            );\r\n        }\r\n        let status = \"Ongoing\"\r\n        if (checkWin(this.state.squares)) {\r\n            status = \"You won!\";\r\n        }\r\n        if (this.state.gameEnd) {\r\n            status = \"You lost!\";\r\n        }\r\n        return <div><div className='board-data'>\r\n        <Timer/>\r\n        <div className='m-fs'>Mines: {this.state.mines} | Flags: {this.state.flags}</div>\r\n    </div><div class = \"board\">{rows} </div>{status}</div>;\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    render() {\r\n        return (\r\n            \r\n            <div className=\"game\">\r\n                <h2 className='title'>MINESWEEPER</h2>\r\n                <div className=\"game-board\">\r\n                    \r\n                    <Board />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{/* status */}</div>\r\n                    <ol>{/* TODO */}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction checkWin(squares) {\r\n    for (let i = 0; i < 10; i++) {\r\n        for (let j = 0; j < 10; j++) {\r\n            if (!squares[i][j].open && squares[i][j].value !== 'X') {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\n// ========================================\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(<Game />);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}