{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMCS\\\\Desktop\\\\React-test\\\\myapp\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport flag from './flag.svg';\nimport { useEffect } from 'react';\nimport bomb from './bomb.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Square(props) {\n  const sq = props.square;\n  const style = {\n    backgroundColor: sq.open ? 'lightgrey' : 'darkgrey',\n    color: sq.value === 'X' ? 'red' : 'black'\n  };\n  let val = sq.value;\n  if (sq.value === 0) {\n    val = '';\n  }\n  let img = sq.flag ? /*#__PURE__*/_jsxDEV(\"img\", {\n    src: flag\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 25\n  }, this) : null;\n  let block = sq.open ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"block top-part disappeared\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 27\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"block top-part\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 81\n  }, this);\n  if (sq.open && !sq.animationed) {\n    block = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block top-part disappear\",\n      onAnimationEnd: props.animationHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this);\n  }\n  const handler = e => {\n    e.preventDefault();\n    props.onContextMenu();\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    style: style,\n    onClick: props.onClick,\n    onContextMenu: handler,\n    children: [img, block, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block\",\n      children: val\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_c = Square;\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleAnimationEnd = (e, x, y) => {\n      this.setState(prevState => {\n        const squares = prevState.squares.map(row => row.slice());\n        squares[y][x] = {\n          ...squares[y][x],\n          animationed: true\n        };\n        return {\n          squares\n        };\n      });\n      e.target.classList.remove('disappear');\n      e.target.classList.remove('top-part');\n    };\n    this.openBombWithDelay = (index, bombs) => {\n      if (index >= bombs.length) {\n        return;\n      }\n      setTimeout(() => {\n        const {\n          x,\n          y\n        } = bombs[index];\n        squaresCopy[y][x].open = true;\n        this.setState({\n          squares: squaresCopy\n        });\n\n        // Trigger screen shake animation (add a class to the board or game container)\n        document.querySelector('.board').classList.add('shake');\n        setTimeout(() => {\n          // Remove screen shake animation class after animation duration\n          document.querySelector('.board').classList.remove('shake');\n        }, 1000); // Adjust to match the duration of the shake animation\n\n        openBombWithDelay(index + 1, bombs);\n      }, delay);\n    };\n    this.state = {\n      squares: Array.from({\n        length: 10\n      }, () => Array(10).fill({\n        value: 0,\n        flag: false,\n        open: false,\n        animationed: false\n      })),\n      firstClick: false,\n      gameEnd: false\n    };\n  }\n  toXY(num) {\n    return [num % 10, Math.floor(num / 10)];\n  }\n  getNeighbours(x, y) {\n    var cells = [[x - 1, y - 1], [x - 1, y], [x - 1, y + 1], [x, y - 1], [x, y + 1], [x + 1, y - 1], [x + 1, y], [x + 1, y + 1]];\n    return cells.filter(cell => cell[0] >= 0 && cell[0] < 10 && cell[1] >= 0 && cell[1] < 10);\n  }\n  createMines(first) {\n    var mines = [];\n    while (mines.length < 15) {\n      var r = Math.floor(Math.random() * 100);\n      if (mines.indexOf(r) === -1 && r !== first) mines.push(r);\n    }\n    this.setState(prevState => {\n      const squares = prevState.squares.map(row => row.slice());\n      for (let i = 0; i < mines.length; i++) {\n        let [x, y] = this.toXY(mines[i]);\n        squares[y][x] = {\n          ...squares[y][x],\n          value: 'X'\n        };\n      }\n      return {\n        squares\n      };\n    }, this.createNums);\n  }\n  createNums() {\n    this.setState(prevState => {\n      const squares = prevState.squares.map(row => row.slice());\n      for (let x = 0; x < 10; x++) {\n        for (let y = 0; y < 10; y++) {\n          if (squares[y][x].value === 'X') {\n            let cells = this.getNeighbours(x, y);\n            for (let j = 0; j < cells.length; j++) {\n              let [xt, yt] = cells[j];\n              if (squares[yt][xt].value !== 'X') {\n                squares[yt][xt] = {\n                  ...squares[yt][xt],\n                  value: squares[yt][xt].value + 1\n                };\n              }\n            }\n          }\n        }\n      }\n      return {\n        squares\n      };\n    });\n  }\n  handleClick(x, y) {\n    if (!this.state.firstClick) {\n      this.createMines(y * 10 + x);\n      this.setState({\n        firstClick: true\n      }, () => this.handleClick(x, y));\n      return;\n    }\n    if (!this.state.squares[y][x].open && !this.state.squares[y][x].flag) {\n      this.setState(prevState => {\n        if (prevState.squares[y][x].value === 'X') {\n          this.setState({\n            gameEnd: true\n          });\n          this.bombClick();\n          return;\n        }\n        const squares = prevState.squares.map(row => row.slice());\n        squares[y][x] = {\n          ...squares[y][x],\n          open: true\n        };\n        return {\n          squares\n        };\n      }, () => {\n        if (this.state.squares[y][x].value === 0) {\n          this.openSquares(x, y);\n        }\n      });\n    } else if (this.state.squares[y][x].open) {\n      console.log(this.openFlagNeighbours(x, y));\n      this.openFlagNeighbours(x, y);\n    }\n  }\n  handleRightClick(x, y) {\n    this.setState(prevState => {\n      const squares = prevState.squares.map(row => row.slice());\n      const flagged = !squares[y][x].flag;\n      squares[y][x] = {\n        ...squares[y][x],\n        flag: squares[y][x].open ? !flagged : flagged\n      };\n      return {\n        squares\n      };\n    });\n    return false;\n  }\n  openFlagNeighbours(x, y) {\n    const val = this.state.squares[y][x].value;\n    var cells = this.getNeighbours(x, y);\n    let flagnums = 0;\n    cells.forEach(cell => {\n      if (this.state.squares[cell[1]][cell[0]].flag) {\n        flagnums++;\n      }\n    });\n    console.log(flagnums, val);\n    if (flagnums === val) {\n      cells.forEach(cell => {\n        if (!this.state.squares[cell[1]][cell[0]].open && !this.state.squares[cell[1]][cell[0]].flag) {\n          this.handleClick(cell[0], cell[1]);\n        }\n      });\n    }\n  }\n  openSquares(x, y) {\n    const cells = this.getNeighbours(x, y);\n    for (let j = 0; j < cells.length; j++) {\n      let [xt, yt] = cells[j];\n      if (!this.state.squares[yt][xt].open && !this.state.squares[yt][xt].flag && this.state.squares[yt][xt].value !== 'X') {\n        this.setState(prevState => {\n          const squares = prevState.squares.map(row => row.slice());\n          squares[yt][xt] = {\n            ...squares[yt][xt],\n            open: true\n          };\n          return {\n            squares\n          };\n        }, () => {\n          if (this.state.squares[yt][xt].value === 0) {\n            this.openSquares(xt, yt);\n          }\n        });\n      }\n    }\n  }\n  bombClick() {\n    this.setState(prevState => {\n      const squares = prevState.squares.map(row => row.slice());\n      for (let i = 0; i < 10; i++) {\n        for (let j = 0; j < 10; j++) {\n          if (this.state.squares[i][j].value === 'X' && !this.state.squares[i][j].flag) {\n            squares[i][j] = {\n              ...squares[i][j],\n              open: true\n            };\n            setTimeout(() => {\n              squares[i][j].style.animation = 'shake 0.5s ease-in-out'; // Replace with your animation name\n            }, 100 * j);\n          }\n        }\n      }\n      return {\n        squares\n      };\n    });\n  }\n  renderSquare(x, y) {\n    const square = this.state.squares[y][x];\n    return /*#__PURE__*/_jsxDEV(Square, {\n      square: square,\n      animationHandler: e => this.handleAnimationEnd(e, x, y),\n      onClick: () => this.handleClick(x, y),\n      onContextMenu: () => this.handleRightClick(x, y)\n    }, `${x}-${y}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this);\n  }\n  render() {\n    const rows = [];\n    for (let i = 0; i < 10; i++) {\n      const cols = [];\n      for (let j = 0; j < 10; j++) {\n        cols.push(this.renderSquare(j, i));\n      }\n      rows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: cols\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this));\n    }\n    let status = \"Ongoing\";\n    if (checkWin(this.state.squares)) {\n      status = \"You won!\";\n    }\n    if (this.state.gameEnd) {\n      status = \"You lost!\";\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"board\",\n        children: [rows, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 21\n      }, this), status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 16\n    }, this);\n  }\n}\nclass Game extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this);\n  }\n}\nfunction checkWin(squares) {\n  for (let i = 0; i < 10; i++) {\n    for (let j = 0; j < 10; j++) {\n      if (!squares[i][j].open && squares[i][j].value !== 'X') {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n// ========================================\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 285,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"names":["React","ReactDOM","flag","useEffect","bomb","jsxDEV","_jsxDEV","Square","props","sq","square","style","backgroundColor","open","color","value","val","img","src","fileName","_jsxFileName","lineNumber","columnNumber","block","className","animationed","onAnimationEnd","animationHandler","handler","e","preventDefault","onContextMenu","onClick","children","_c","Board","Component","constructor","handleAnimationEnd","x","y","setState","prevState","squares","map","row","slice","target","classList","remove","openBombWithDelay","index","bombs","length","setTimeout","squaresCopy","document","querySelector","add","delay","state","Array","from","fill","firstClick","gameEnd","toXY","num","Math","floor","getNeighbours","cells","filter","cell","createMines","first","mines","r","random","indexOf","push","i","createNums","j","xt","yt","handleClick","bombClick","openSquares","console","log","openFlagNeighbours","handleRightClick","flagged","flagnums","forEach","animation","renderSquare","render","rows","cols","status","checkWin","class","Game","root","createRoot","getElementById","$RefreshReg$"],"sources":["C:/Users/AMCS/Desktop/React-test/myapp/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport flag from './flag.svg'\r\nimport { useEffect } from 'react';\r\nimport bomb from './bomb.svg'\r\n\r\nfunction Square(props) {\r\n    const sq = props.square\r\n    const style = {\r\n        backgroundColor: sq.open ? 'lightgrey' : 'darkgrey',\r\n        color: sq.value === 'X' ? 'red' : 'black'\r\n    };\r\n    let val = sq.value\r\n    if (sq.value === 0) {\r\n        val = ''\r\n    }\r\n    let img = sq.flag ? <img src={flag}></img> : null;\r\n    let block = sq.open ? <div className='block top-part disappeared' ></div> : <div className='block top-part' ></div>;\r\n    if (sq.open && !sq.animationed) {\r\n        block = <div className='block top-part disappear' onAnimationEnd={props.animationHandler} ></div>;\r\n    }\r\n    const handler = (e) => {\r\n        e.preventDefault();\r\n        props.onContextMenu()\r\n    }\r\n\r\n\r\n    return (\r\n        <button className=\"square\" style={style} onClick={props.onClick} onContextMenu={handler} >\r\n            {img}\r\n            {block}\r\n            <div className='block'>{val}</div>\r\n        </button>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            squares: Array.from({ length: 10 }, () => Array(10).fill({ value: 0, flag: false, open: false, animationed: false })),\r\n            firstClick: false,\r\n            gameEnd: false\r\n        };\r\n    }\r\n\r\n    toXY(num) {\r\n        return [num % 10, Math.floor(num / 10)];\r\n    }\r\n\r\n    getNeighbours(x, y) {\r\n        var cells = [[x - 1, y - 1], [x - 1, y], [x - 1, y + 1], [x, y - 1], [x, y + 1], [x + 1, y - 1], [x + 1, y], [x + 1, y + 1]];\r\n        return cells.filter(cell => cell[0] >= 0 && cell[0] < 10 && cell[1] >= 0 && cell[1] < 10);\r\n    }\r\n\r\n    createMines(first) {\r\n        var mines = [];\r\n        while (mines.length < 15) {\r\n            var r = Math.floor(Math.random() * 100);\r\n            if (mines.indexOf(r) === -1 && r !== first) mines.push(r);\r\n        }\r\n        this.setState(prevState => {\r\n            const squares = prevState.squares.map(row => row.slice());\r\n            for (let i = 0; i < mines.length; i++) {\r\n                let [x, y] = this.toXY(mines[i]);\r\n                squares[y][x] = { ...squares[y][x], value: 'X' };\r\n            }\r\n            return { squares };\r\n        }, this.createNums);\r\n    }\r\n\r\n    createNums() {\r\n        this.setState(prevState => {\r\n            const squares = prevState.squares.map(row => row.slice());\r\n            for (let x = 0; x < 10; x++) {\r\n                for (let y = 0; y < 10; y++) {\r\n                    if (squares[y][x].value === 'X') {\r\n                        let cells = this.getNeighbours(x, y);\r\n                        for (let j = 0; j < cells.length; j++) {\r\n                            let [xt, yt] = cells[j];\r\n                            if (squares[yt][xt].value !== 'X') {\r\n                                squares[yt][xt] = { ...squares[yt][xt], value: squares[yt][xt].value + 1 };\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return { squares };\r\n        });\r\n    }\r\n\r\n    handleClick(x, y) {\r\n        if (!this.state.firstClick) {\r\n            this.createMines(y * 10 + x);\r\n            this.setState({ firstClick: true }, () => this.handleClick(x, y));\r\n            return;\r\n        }\r\n        if (!this.state.squares[y][x].open && !this.state.squares[y][x].flag) {\r\n            this.setState(prevState => {\r\n                if (prevState.squares[y][x].value === 'X') {\r\n                    this.setState({ gameEnd: true });\r\n                    this.bombClick();\r\n                    return;\r\n                }\r\n                const squares = prevState.squares.map(row => row.slice());\r\n                squares[y][x] = { ...squares[y][x], open: true };\r\n                return { squares };\r\n            }, () => {\r\n                if (this.state.squares[y][x].value === 0) {\r\n                    this.openSquares(x, y);\r\n                }\r\n            });\r\n        } else if (this.state.squares[y][x].open ) {\r\n            console.log(this.openFlagNeighbours(x, y))\r\n            this.openFlagNeighbours(x, y);\r\n        }\r\n    }\r\n\r\n    handleRightClick(x, y) {\r\n        this.setState(prevState => {\r\n            const squares = prevState.squares.map(row => row.slice());\r\n            const flagged = !squares[y][x].flag\r\n            squares[y][x] = { ...squares[y][x], flag: squares[y][x].open ? !flagged : flagged };\r\n            return { squares };\r\n        });\r\n        return false;\r\n    }\r\n\r\n    handleAnimationEnd = (e, x, y) => {\r\n            this.setState(prevState => {\r\n                const squares = prevState.squares.map(row => row.slice());\r\n                squares[y][x] = { ...squares[y][x], animationed: true };\r\n                return { squares };\r\n            })\r\n            e.target.classList.remove('disappear');\r\n            e.target.classList.remove('top-part');\r\n    };\r\n\r\n    openFlagNeighbours(x, y) {\r\n        const val = this.state.squares[y][x].value;\r\n        var cells = this.getNeighbours(x, y);\r\n        let flagnums = 0;\r\n        \r\n        cells.forEach(cell => {\r\n            if (this.state.squares[cell[1]][cell[0]].flag) {\r\n                flagnums++;\r\n            }\r\n        })\r\n        console.log(flagnums, val);\r\n        if (flagnums === val) {\r\n            cells.forEach(cell => {\r\n                if (!this.state.squares[cell[1]][cell[0]].open && !this.state.squares[cell[1]][cell[0]].flag) {\r\n                    this.handleClick(cell[0], cell[1]);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    openSquares(x, y) {\r\n        const cells = this.getNeighbours(x, y);\r\n        for (let j = 0; j < cells.length; j++) {\r\n            let [xt, yt] = cells[j];\r\n            if (!this.state.squares[yt][xt].open && !this.state.squares[yt][xt].flag && this.state.squares[yt][xt].value !== 'X') {\r\n                this.setState(prevState => {\r\n                    const squares = prevState.squares.map(row => row.slice());\r\n                    squares[yt][xt] = { ...squares[yt][xt], open: true };\r\n                    return { squares };\r\n                }, () => {\r\n                    if (this.state.squares[yt][xt].value === 0) {\r\n                        this.openSquares(xt, yt);\r\n\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    bombClick() {\r\n        this.setState(prevState => {\r\n            const squares = prevState.squares.map(row => row.slice());\r\n            for (let i = 0; i < 10; i++) {\r\n                for (let j = 0; j < 10; j++) {\r\n                    if (this.state.squares[i][j].value === 'X' && !this.state.squares[i][j].flag) {\r\n                        squares[i][j] = { ...squares[i][j], open: true };\r\n                        setTimeout(() => {\r\n                            squares[i][j].style.animation = 'shake 0.5s ease-in-out'; // Replace with your animation name\r\n                          }, 100 * j);\r\n                    }\r\n                }\r\n            }\r\n            return { squares };\r\n        })\r\n    }\r\n\r\n    openBombWithDelay = (index, bombs) => {\r\n        if (index >= bombs.length) {\r\n            return;\r\n        }\r\n\r\n        setTimeout(() => {\r\n            const { x, y } = bombs[index];\r\n            squaresCopy[y][x].open = true;\r\n            this.setState({ squares: squaresCopy });\r\n\r\n            // Trigger screen shake animation (add a class to the board or game container)\r\n            document.querySelector('.board').classList.add('shake');\r\n\r\n            setTimeout(() => {\r\n                // Remove screen shake animation class after animation duration\r\n                document.querySelector('.board').classList.remove('shake');\r\n            }, 1000); // Adjust to match the duration of the shake animation\r\n\r\n            openBombWithDelay(index + 1, bombs);\r\n        }, delay);\r\n    };\r\n\r\n    renderSquare(x, y) {\r\n        const square = this.state.squares[y][x];\r\n        return (\r\n            <Square\r\n                key={`${x}-${y}`}\r\n                square={square}\r\n                animationHandler={(e) => this.handleAnimationEnd(e, x, y)}\r\n                onClick={() => this.handleClick(x, y)}\r\n                onContextMenu={() => this.handleRightClick(x, y)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const rows = [];\r\n        for (let i = 0; i < 10; i++) {\r\n            const cols = [];\r\n            for (let j = 0; j < 10; j++) {\r\n                cols.push(this.renderSquare(j, i));\r\n            }\r\n            rows.push(\r\n                <div key={i} className=\"board-row\">\r\n                    {cols}\r\n                </div>\r\n            );\r\n        }\r\n        let status = \"Ongoing\"\r\n        if (checkWin(this.state.squares)) {\r\n            status = \"You won!\";\r\n        }\r\n        if (this.state.gameEnd) {\r\n            status = \"You lost!\";\r\n        }\r\n        return <div><div class = \"board\">{rows} </div>{status}</div>;\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{/* status */}</div>\r\n                    <ol>{/* TODO */}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction checkWin(squares) {\r\n    for (let i = 0; i < 10; i++) {\r\n        for (let j = 0; j < 10; j++) {\r\n            if (!squares[i][j].open && squares[i][j].value !== 'X') {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\n// ========================================\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(<Game />);\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,IAAI,MAAM,YAAY;AAC7B,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,IAAI,MAAM,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,MAAMA,CAACC,KAAK,EAAE;EACnB,MAAMC,EAAE,GAAGD,KAAK,CAACE,MAAM;EACvB,MAAMC,KAAK,GAAG;IACVC,eAAe,EAAEH,EAAE,CAACI,IAAI,GAAG,WAAW,GAAG,UAAU;IACnDC,KAAK,EAAEL,EAAE,CAACM,KAAK,KAAK,GAAG,GAAG,KAAK,GAAG;EACtC,CAAC;EACD,IAAIC,GAAG,GAAGP,EAAE,CAACM,KAAK;EAClB,IAAIN,EAAE,CAACM,KAAK,KAAK,CAAC,EAAE;IAChBC,GAAG,GAAG,EAAE;EACZ;EACA,IAAIC,GAAG,GAAGR,EAAE,CAACP,IAAI,gBAAGI,OAAA;IAAKY,GAAG,EAAEhB;EAAK;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC,GAAG,IAAI;EACjD,IAAIC,KAAK,GAAGd,EAAE,CAACI,IAAI,gBAAGP,OAAA;IAAKkB,SAAS,EAAC;EAA4B;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAO,CAAC,gBAAGhB,OAAA;IAAKkB,SAAS,EAAC;EAAgB;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAO,CAAC;EACnH,IAAIb,EAAE,CAACI,IAAI,IAAI,CAACJ,EAAE,CAACgB,WAAW,EAAE;IAC5BF,KAAK,gBAAGjB,OAAA;MAAKkB,SAAS,EAAC,0BAA0B;MAACE,cAAc,EAAElB,KAAK,CAACmB;IAAiB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EACrG;EACA,MAAMM,OAAO,GAAIC,CAAC,IAAK;IACnBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBtB,KAAK,CAACuB,aAAa,CAAC,CAAC;EACzB,CAAC;EAGD,oBACIzB,OAAA;IAAQkB,SAAS,EAAC,QAAQ;IAACb,KAAK,EAAEA,KAAM;IAACqB,OAAO,EAAExB,KAAK,CAACwB,OAAQ;IAACD,aAAa,EAAEH,OAAQ;IAAAK,QAAA,GACnFhB,GAAG,EACHM,KAAK,eACNjB,OAAA;MAAKkB,SAAS,EAAC,OAAO;MAAAS,QAAA,EAAEjB;IAAG;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEjB;AAACY,EAAA,GA5BQ3B,MAAM;AA8Bf,MAAM4B,KAAK,SAASnC,KAAK,CAACoC,SAAS,CAAC;EAChCC,WAAWA,CAAC7B,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAAC,KA0FjB8B,kBAAkB,GAAG,CAACT,CAAC,EAAEU,CAAC,EAAEC,CAAC,KAAK;MAC1B,IAAI,CAACC,QAAQ,CAACC,SAAS,IAAI;QACvB,MAAMC,OAAO,GAAGD,SAAS,CAACC,OAAO,CAACC,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,KAAK,CAAC,CAAC,CAAC;QACzDH,OAAO,CAACH,CAAC,CAAC,CAACD,CAAC,CAAC,GAAG;UAAE,GAAGI,OAAO,CAACH,CAAC,CAAC,CAACD,CAAC,CAAC;UAAEd,WAAW,EAAE;QAAK,CAAC;QACvD,OAAO;UAAEkB;QAAQ,CAAC;MACtB,CAAC,CAAC;MACFd,CAAC,CAACkB,MAAM,CAACC,SAAS,CAACC,MAAM,CAAC,WAAW,CAAC;MACtCpB,CAAC,CAACkB,MAAM,CAACC,SAAS,CAACC,MAAM,CAAC,UAAU,CAAC;IAC7C,CAAC;IAAA,KA0DDC,iBAAiB,GAAG,CAACC,KAAK,EAAEC,KAAK,KAAK;MAClC,IAAID,KAAK,IAAIC,KAAK,CAACC,MAAM,EAAE;QACvB;MACJ;MAEAC,UAAU,CAAC,MAAM;QACb,MAAM;UAAEf,CAAC;UAAEC;QAAE,CAAC,GAAGY,KAAK,CAACD,KAAK,CAAC;QAC7BI,WAAW,CAACf,CAAC,CAAC,CAACD,CAAC,CAAC,CAAC1B,IAAI,GAAG,IAAI;QAC7B,IAAI,CAAC4B,QAAQ,CAAC;UAAEE,OAAO,EAAEY;QAAY,CAAC,CAAC;;QAEvC;QACAC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC,CAACT,SAAS,CAACU,GAAG,CAAC,OAAO,CAAC;QAEvDJ,UAAU,CAAC,MAAM;UACb;UACAE,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC,CAACT,SAAS,CAACC,MAAM,CAAC,OAAO,CAAC;QAC9D,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;QAEVC,iBAAiB,CAACC,KAAK,GAAG,CAAC,EAAEC,KAAK,CAAC;MACvC,CAAC,EAAEO,KAAK,CAAC;IACb,CAAC;IA/KG,IAAI,CAACC,KAAK,GAAG;MACTjB,OAAO,EAAEkB,KAAK,CAACC,IAAI,CAAC;QAAET,MAAM,EAAE;MAAG,CAAC,EAAE,MAAMQ,KAAK,CAAC,EAAE,CAAC,CAACE,IAAI,CAAC;QAAEhD,KAAK,EAAE,CAAC;QAAEb,IAAI,EAAE,KAAK;QAAEW,IAAI,EAAE,KAAK;QAAEY,WAAW,EAAE;MAAM,CAAC,CAAC,CAAC;MACrHuC,UAAU,EAAE,KAAK;MACjBC,OAAO,EAAE;IACb,CAAC;EACL;EAEAC,IAAIA,CAACC,GAAG,EAAE;IACN,OAAO,CAACA,GAAG,GAAG,EAAE,EAAEC,IAAI,CAACC,KAAK,CAACF,GAAG,GAAG,EAAE,CAAC,CAAC;EAC3C;EAEAG,aAAaA,CAAC/B,CAAC,EAAEC,CAAC,EAAE;IAChB,IAAI+B,KAAK,GAAG,CAAC,CAAChC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC,EAAE,CAACD,CAAC,GAAG,CAAC,EAAEC,CAAC,CAAC,EAAE,CAACD,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC,EAAE,CAACD,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC,EAAE,CAACD,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC,EAAE,CAACD,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC,EAAE,CAACD,CAAC,GAAG,CAAC,EAAEC,CAAC,CAAC,EAAE,CAACD,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5H,OAAO+B,KAAK,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,IAAIA,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;EAC7F;EAEAC,WAAWA,CAACC,KAAK,EAAE;IACf,IAAIC,KAAK,GAAG,EAAE;IACd,OAAOA,KAAK,CAACvB,MAAM,GAAG,EAAE,EAAE;MACtB,IAAIwB,CAAC,GAAGT,IAAI,CAACC,KAAK,CAACD,IAAI,CAACU,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;MACvC,IAAIF,KAAK,CAACG,OAAO,CAACF,CAAC,CAAC,KAAK,CAAC,CAAC,IAAIA,CAAC,KAAKF,KAAK,EAAEC,KAAK,CAACI,IAAI,CAACH,CAAC,CAAC;IAC7D;IACA,IAAI,CAACpC,QAAQ,CAACC,SAAS,IAAI;MACvB,MAAMC,OAAO,GAAGD,SAAS,CAACC,OAAO,CAACC,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,KAAK,CAAC,CAAC,CAAC;MACzD,KAAK,IAAImC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,KAAK,CAACvB,MAAM,EAAE4B,CAAC,EAAE,EAAE;QACnC,IAAI,CAAC1C,CAAC,EAAEC,CAAC,CAAC,GAAG,IAAI,CAAC0B,IAAI,CAACU,KAAK,CAACK,CAAC,CAAC,CAAC;QAChCtC,OAAO,CAACH,CAAC,CAAC,CAACD,CAAC,CAAC,GAAG;UAAE,GAAGI,OAAO,CAACH,CAAC,CAAC,CAACD,CAAC,CAAC;UAAExB,KAAK,EAAE;QAAI,CAAC;MACpD;MACA,OAAO;QAAE4B;MAAQ,CAAC;IACtB,CAAC,EAAE,IAAI,CAACuC,UAAU,CAAC;EACvB;EAEAA,UAAUA,CAAA,EAAG;IACT,IAAI,CAACzC,QAAQ,CAACC,SAAS,IAAI;MACvB,MAAMC,OAAO,GAAGD,SAAS,CAACC,OAAO,CAACC,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,KAAK,CAAC,CAAC,CAAC;MACzD,KAAK,IAAIP,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;QACzB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;UACzB,IAAIG,OAAO,CAACH,CAAC,CAAC,CAACD,CAAC,CAAC,CAACxB,KAAK,KAAK,GAAG,EAAE;YAC7B,IAAIwD,KAAK,GAAG,IAAI,CAACD,aAAa,CAAC/B,CAAC,EAAEC,CAAC,CAAC;YACpC,KAAK,IAAI2C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,KAAK,CAAClB,MAAM,EAAE8B,CAAC,EAAE,EAAE;cACnC,IAAI,CAACC,EAAE,EAAEC,EAAE,CAAC,GAAGd,KAAK,CAACY,CAAC,CAAC;cACvB,IAAIxC,OAAO,CAAC0C,EAAE,CAAC,CAACD,EAAE,CAAC,CAACrE,KAAK,KAAK,GAAG,EAAE;gBAC/B4B,OAAO,CAAC0C,EAAE,CAAC,CAACD,EAAE,CAAC,GAAG;kBAAE,GAAGzC,OAAO,CAAC0C,EAAE,CAAC,CAACD,EAAE,CAAC;kBAAErE,KAAK,EAAE4B,OAAO,CAAC0C,EAAE,CAAC,CAACD,EAAE,CAAC,CAACrE,KAAK,GAAG;gBAAE,CAAC;cAC9E;YACJ;UACJ;QACJ;MACJ;MACA,OAAO;QAAE4B;MAAQ,CAAC;IACtB,CAAC,CAAC;EACN;EAEA2C,WAAWA,CAAC/C,CAAC,EAAEC,CAAC,EAAE;IACd,IAAI,CAAC,IAAI,CAACoB,KAAK,CAACI,UAAU,EAAE;MACxB,IAAI,CAACU,WAAW,CAAClC,CAAC,GAAG,EAAE,GAAGD,CAAC,CAAC;MAC5B,IAAI,CAACE,QAAQ,CAAC;QAAEuB,UAAU,EAAE;MAAK,CAAC,EAAE,MAAM,IAAI,CAACsB,WAAW,CAAC/C,CAAC,EAAEC,CAAC,CAAC,CAAC;MACjE;IACJ;IACA,IAAI,CAAC,IAAI,CAACoB,KAAK,CAACjB,OAAO,CAACH,CAAC,CAAC,CAACD,CAAC,CAAC,CAAC1B,IAAI,IAAI,CAAC,IAAI,CAAC+C,KAAK,CAACjB,OAAO,CAACH,CAAC,CAAC,CAACD,CAAC,CAAC,CAACrC,IAAI,EAAE;MAClE,IAAI,CAACuC,QAAQ,CAACC,SAAS,IAAI;QACvB,IAAIA,SAAS,CAACC,OAAO,CAACH,CAAC,CAAC,CAACD,CAAC,CAAC,CAACxB,KAAK,KAAK,GAAG,EAAE;UACvC,IAAI,CAAC0B,QAAQ,CAAC;YAAEwB,OAAO,EAAE;UAAK,CAAC,CAAC;UAChC,IAAI,CAACsB,SAAS,CAAC,CAAC;UAChB;QACJ;QACA,MAAM5C,OAAO,GAAGD,SAAS,CAACC,OAAO,CAACC,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,KAAK,CAAC,CAAC,CAAC;QACzDH,OAAO,CAACH,CAAC,CAAC,CAACD,CAAC,CAAC,GAAG;UAAE,GAAGI,OAAO,CAACH,CAAC,CAAC,CAACD,CAAC,CAAC;UAAE1B,IAAI,EAAE;QAAK,CAAC;QAChD,OAAO;UAAE8B;QAAQ,CAAC;MACtB,CAAC,EAAE,MAAM;QACL,IAAI,IAAI,CAACiB,KAAK,CAACjB,OAAO,CAACH,CAAC,CAAC,CAACD,CAAC,CAAC,CAACxB,KAAK,KAAK,CAAC,EAAE;UACtC,IAAI,CAACyE,WAAW,CAACjD,CAAC,EAAEC,CAAC,CAAC;QAC1B;MACJ,CAAC,CAAC;IACN,CAAC,MAAM,IAAI,IAAI,CAACoB,KAAK,CAACjB,OAAO,CAACH,CAAC,CAAC,CAACD,CAAC,CAAC,CAAC1B,IAAI,EAAG;MACvC4E,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,kBAAkB,CAACpD,CAAC,EAAEC,CAAC,CAAC,CAAC;MAC1C,IAAI,CAACmD,kBAAkB,CAACpD,CAAC,EAAEC,CAAC,CAAC;IACjC;EACJ;EAEAoD,gBAAgBA,CAACrD,CAAC,EAAEC,CAAC,EAAE;IACnB,IAAI,CAACC,QAAQ,CAACC,SAAS,IAAI;MACvB,MAAMC,OAAO,GAAGD,SAAS,CAACC,OAAO,CAACC,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,KAAK,CAAC,CAAC,CAAC;MACzD,MAAM+C,OAAO,GAAG,CAAClD,OAAO,CAACH,CAAC,CAAC,CAACD,CAAC,CAAC,CAACrC,IAAI;MACnCyC,OAAO,CAACH,CAAC,CAAC,CAACD,CAAC,CAAC,GAAG;QAAE,GAAGI,OAAO,CAACH,CAAC,CAAC,CAACD,CAAC,CAAC;QAAErC,IAAI,EAAEyC,OAAO,CAACH,CAAC,CAAC,CAACD,CAAC,CAAC,CAAC1B,IAAI,GAAG,CAACgF,OAAO,GAAGA;MAAQ,CAAC;MACnF,OAAO;QAAElD;MAAQ,CAAC;IACtB,CAAC,CAAC;IACF,OAAO,KAAK;EAChB;EAYAgD,kBAAkBA,CAACpD,CAAC,EAAEC,CAAC,EAAE;IACrB,MAAMxB,GAAG,GAAG,IAAI,CAAC4C,KAAK,CAACjB,OAAO,CAACH,CAAC,CAAC,CAACD,CAAC,CAAC,CAACxB,KAAK;IAC1C,IAAIwD,KAAK,GAAG,IAAI,CAACD,aAAa,CAAC/B,CAAC,EAAEC,CAAC,CAAC;IACpC,IAAIsD,QAAQ,GAAG,CAAC;IAEhBvB,KAAK,CAACwB,OAAO,CAACtB,IAAI,IAAI;MAClB,IAAI,IAAI,CAACb,KAAK,CAACjB,OAAO,CAAC8B,IAAI,CAAC,CAAC,CAAC,CAAC,CAACA,IAAI,CAAC,CAAC,CAAC,CAAC,CAACvE,IAAI,EAAE;QAC3C4F,QAAQ,EAAE;MACd;IACJ,CAAC,CAAC;IACFL,OAAO,CAACC,GAAG,CAACI,QAAQ,EAAE9E,GAAG,CAAC;IAC1B,IAAI8E,QAAQ,KAAK9E,GAAG,EAAE;MAClBuD,KAAK,CAACwB,OAAO,CAACtB,IAAI,IAAI;QAClB,IAAI,CAAC,IAAI,CAACb,KAAK,CAACjB,OAAO,CAAC8B,IAAI,CAAC,CAAC,CAAC,CAAC,CAACA,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC5D,IAAI,IAAI,CAAC,IAAI,CAAC+C,KAAK,CAACjB,OAAO,CAAC8B,IAAI,CAAC,CAAC,CAAC,CAAC,CAACA,IAAI,CAAC,CAAC,CAAC,CAAC,CAACvE,IAAI,EAAE;UAC1F,IAAI,CAACoF,WAAW,CAACb,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,CAAC;QACtC;MACJ,CAAC,CAAC;IACN;EACJ;EAEAe,WAAWA,CAACjD,CAAC,EAAEC,CAAC,EAAE;IACd,MAAM+B,KAAK,GAAG,IAAI,CAACD,aAAa,CAAC/B,CAAC,EAAEC,CAAC,CAAC;IACtC,KAAK,IAAI2C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,KAAK,CAAClB,MAAM,EAAE8B,CAAC,EAAE,EAAE;MACnC,IAAI,CAACC,EAAE,EAAEC,EAAE,CAAC,GAAGd,KAAK,CAACY,CAAC,CAAC;MACvB,IAAI,CAAC,IAAI,CAACvB,KAAK,CAACjB,OAAO,CAAC0C,EAAE,CAAC,CAACD,EAAE,CAAC,CAACvE,IAAI,IAAI,CAAC,IAAI,CAAC+C,KAAK,CAACjB,OAAO,CAAC0C,EAAE,CAAC,CAACD,EAAE,CAAC,CAAClF,IAAI,IAAI,IAAI,CAAC0D,KAAK,CAACjB,OAAO,CAAC0C,EAAE,CAAC,CAACD,EAAE,CAAC,CAACrE,KAAK,KAAK,GAAG,EAAE;QAClH,IAAI,CAAC0B,QAAQ,CAACC,SAAS,IAAI;UACvB,MAAMC,OAAO,GAAGD,SAAS,CAACC,OAAO,CAACC,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,KAAK,CAAC,CAAC,CAAC;UACzDH,OAAO,CAAC0C,EAAE,CAAC,CAACD,EAAE,CAAC,GAAG;YAAE,GAAGzC,OAAO,CAAC0C,EAAE,CAAC,CAACD,EAAE,CAAC;YAAEvE,IAAI,EAAE;UAAK,CAAC;UACpD,OAAO;YAAE8B;UAAQ,CAAC;QACtB,CAAC,EAAE,MAAM;UACL,IAAI,IAAI,CAACiB,KAAK,CAACjB,OAAO,CAAC0C,EAAE,CAAC,CAACD,EAAE,CAAC,CAACrE,KAAK,KAAK,CAAC,EAAE;YACxC,IAAI,CAACyE,WAAW,CAACJ,EAAE,EAAEC,EAAE,CAAC;UAE5B;QACJ,CAAC,CAAC;MACN;IACJ;EACJ;EAEAE,SAASA,CAAA,EAAG;IACR,IAAI,CAAC9C,QAAQ,CAACC,SAAS,IAAI;MACvB,MAAMC,OAAO,GAAGD,SAAS,CAACC,OAAO,CAACC,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,KAAK,CAAC,CAAC,CAAC;MACzD,KAAK,IAAImC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;QACzB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;UACzB,IAAI,IAAI,CAACvB,KAAK,CAACjB,OAAO,CAACsC,CAAC,CAAC,CAACE,CAAC,CAAC,CAACpE,KAAK,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC6C,KAAK,CAACjB,OAAO,CAACsC,CAAC,CAAC,CAACE,CAAC,CAAC,CAACjF,IAAI,EAAE;YAC1EyC,OAAO,CAACsC,CAAC,CAAC,CAACE,CAAC,CAAC,GAAG;cAAE,GAAGxC,OAAO,CAACsC,CAAC,CAAC,CAACE,CAAC,CAAC;cAAEtE,IAAI,EAAE;YAAK,CAAC;YAChDyC,UAAU,CAAC,MAAM;cACbX,OAAO,CAACsC,CAAC,CAAC,CAACE,CAAC,CAAC,CAACxE,KAAK,CAACqF,SAAS,GAAG,wBAAwB,CAAC,CAAC;YAC5D,CAAC,EAAE,GAAG,GAAGb,CAAC,CAAC;UACjB;QACJ;MACJ;MACA,OAAO;QAAExC;MAAQ,CAAC;IACtB,CAAC,CAAC;EACN;EAwBAsD,YAAYA,CAAC1D,CAAC,EAAEC,CAAC,EAAE;IACf,MAAM9B,MAAM,GAAG,IAAI,CAACkD,KAAK,CAACjB,OAAO,CAACH,CAAC,CAAC,CAACD,CAAC,CAAC;IACvC,oBACIjC,OAAA,CAACC,MAAM;MAEHG,MAAM,EAAEA,MAAO;MACfiB,gBAAgB,EAAGE,CAAC,IAAK,IAAI,CAACS,kBAAkB,CAACT,CAAC,EAAEU,CAAC,EAAEC,CAAC,CAAE;MAC1DR,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACsD,WAAW,CAAC/C,CAAC,EAAEC,CAAC,CAAE;MACtCT,aAAa,EAAEA,CAAA,KAAM,IAAI,CAAC6D,gBAAgB,CAACrD,CAAC,EAAEC,CAAC;IAAE,GAJ5C,GAAGD,CAAC,IAAIC,CAAC,EAAE;MAAArB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKnB,CAAC;EAEV;EAEA4E,MAAMA,CAAA,EAAG;IACL,MAAMC,IAAI,GAAG,EAAE;IACf,KAAK,IAAIlB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MACzB,MAAMmB,IAAI,GAAG,EAAE;MACf,KAAK,IAAIjB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;QACzBiB,IAAI,CAACpB,IAAI,CAAC,IAAI,CAACiB,YAAY,CAACd,CAAC,EAAEF,CAAC,CAAC,CAAC;MACtC;MACAkB,IAAI,CAACnB,IAAI,eACL1E,OAAA;QAAakB,SAAS,EAAC,WAAW;QAAAS,QAAA,EAC7BmE;MAAI,GADCnB,CAAC;QAAA9D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEN,CACT,CAAC;IACL;IACA,IAAI+E,MAAM,GAAG,SAAS;IACtB,IAAIC,QAAQ,CAAC,IAAI,CAAC1C,KAAK,CAACjB,OAAO,CAAC,EAAE;MAC9B0D,MAAM,GAAG,UAAU;IACvB;IACA,IAAI,IAAI,CAACzC,KAAK,CAACK,OAAO,EAAE;MACpBoC,MAAM,GAAG,WAAW;IACxB;IACA,oBAAO/F,OAAA;MAAA2B,QAAA,gBAAK3B,OAAA;QAAKiG,KAAK,EAAG,OAAO;QAAAtE,QAAA,GAAEkE,IAAI,EAAC,GAAC;MAAA;QAAAhF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAAC+E,MAAM;IAAA;MAAAlF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAChE;AACJ;AAEA,MAAMkF,IAAI,SAASxG,KAAK,CAACoC,SAAS,CAAC;EAC/B8D,MAAMA,CAAA,EAAG;IACL,oBACI5F,OAAA;MAAKkB,SAAS,EAAC,MAAM;MAAAS,QAAA,gBACjB3B,OAAA;QAAKkB,SAAS,EAAC,YAAY;QAAAS,QAAA,eACvB3B,OAAA,CAAC6B,KAAK;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eACNhB,OAAA;QAAKkB,SAAS,EAAC,WAAW;QAAAS,QAAA,gBACtB3B,OAAA;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAwB,CAAC,eACzBhB,OAAA;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAoB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEd;AACJ;AAGA,SAASgF,QAAQA,CAAC3D,OAAO,EAAE;EACvB,KAAK,IAAIsC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;IACzB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MACzB,IAAI,CAACxC,OAAO,CAACsC,CAAC,CAAC,CAACE,CAAC,CAAC,CAACtE,IAAI,IAAI8B,OAAO,CAACsC,CAAC,CAAC,CAACE,CAAC,CAAC,CAACpE,KAAK,KAAK,GAAG,EAAE;QACpD,OAAO,KAAK;MAChB;IACJ;EACJ;EACA,OAAO,IAAI;AACf;AACA;;AAEA,MAAM0F,IAAI,GAAGxG,QAAQ,CAACyG,UAAU,CAAClD,QAAQ,CAACmD,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEF,IAAI,CAACP,MAAM,eAAC5F,OAAA,CAACkG,IAAI;EAAArF,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,CAAC;AAAC,IAAAY,EAAA;AAAA0E,YAAA,CAAA1E,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}